{
  "_from": "curtainsjs",
  "_id": "curtainsjs@3.0.5",
  "_inBundle": false,
  "_integrity": "sha512-pa5Davs0njEEkvOHBkpYFaM63TUzRXSOZ5T0/duwvYypxxalCtncICpmyHx5JbxbTOvqtYRsI1kl8ecT73hS2g==",
  "_location": "/curtainsjs",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "curtainsjs",
    "name": "curtainsjs",
    "escapedName": "curtainsjs",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/curtainsjs/-/curtainsjs-3.0.5.tgz",
  "_shasum": "ef8bb35a82841f14490b41d325c0e672bb97c3b5",
  "_spec": "curtainsjs",
  "_where": "/Users/lisajakubczyk/Desktop/Projects/lisjak.github.io",
  "author": {
    "name": "martinlaxenaire"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "<h2>What is it ?</h2>\r <p>\r     Shaders are the next front-end web developpment big thing, with the ability to create very powerful 3D interactions and animations. A lot of very good javascript libraries already handle WebGL but with most of them it's kind of a headache to position your meshes relative to the DOM elements of your web page.\r </p>\r <p>\r     curtains.js was created with just that issue in mind. It is a small vanilla WebGL javascript library that converts HTML elements containing images and videos into 3D WebGL textured planes, allowing you to animate them via shaders.<br />\r     You can define each plane size and position via CSS, which makes it super easy to add WebGL responsive planes all over your pages.\r </p>\r <p>\r <a href=\"https://www.martin-laxenaire.fr/libs/curtainsjs/index.html\" title=\"Examples\" target=\"_blank\">Examples</a> - <a href=\"https://github.com/martinlaxenaire/curtainsjs\" title=\"GitHub\" target=\"_blank\">GitHub</a> </p>\r ",
  "homepage": "https://github.com/martinlaxenaire/curtainsjs",
  "main": "libs/curtains.min.js",
  "name": "curtainsjs",
  "version": "3.0.5"
}
